#!/usr/bin/env php
<?php

ini_set('memory_limit', '512M');

require __DIR__ . '/../vendor/autoload.php';

$opts = getopt('df:hs:', ['diagnostic', 'file:', 'help', 'since:']);

if (isset($opts['h']) || isset($opts['help'])) {
    echo 'create-shopify-import - Create a Shopify bulk product import CSV.', PHP_EOL;
    echo '', PHP_EOL;
    echo '  -d, --diagnostic      Runs the program and outputs diagnostic information.', PHP_EOL;
    echo '  -f, --file [filename] The filename to output.', PHP_EOL;
    echo '  -h, --help            Show this information.', PHP_EOL;
    echo '  -s, --since [date]    Exports all updated products since {date}.', PHP_EOL;
    echo '', PHP_EOL;
    exit;
}

$factory = new \Gunratbe\Gunfire\Factory\DbalRepositoryFactory(getenv('GUNRAT_DB_URI'));
$service = new \Gunratbe\Gunfire\Shopify\BulkProductImportCsvCreator($factory->getProductRepository());

if (isset($opts['s']) || isset($opts['since'])) {
    $since = $opts['s'] ?? $opts['since'];
    $since = \Gunratbe\Gunfire\Factory\DateTimeFactory::createFromString($since);

    $service->setUpdatedProductsSince($since);
}

if (isset($opts['f']) || isset($opts['file'])) {
    $filename = $opts['f'] ?? $opts['file'];
    $service->setOutputFilename($filename);
}

if (isset($opts['d'])) {
    $stopwatch = new \Symfony\Component\Stopwatch\Stopwatch();
    $stopwatch->start('create');
    $service->create();
    $event = $stopwatch->stop('create');

    echo 'Executed in ', ($event->getDuration() / 1000), 'sec. with ', ($event->getMemory() / (1024 ** 2)), 'mb of memory.', PHP_EOL;
} else {
    $service->create();
}